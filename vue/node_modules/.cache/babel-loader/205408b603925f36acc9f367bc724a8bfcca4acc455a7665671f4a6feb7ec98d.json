{"ast":null,"code":"export default {\n  name: \"Staff\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      departmentList: [],\n      departmentTree: [],\n      treeProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/department/selectAll').then(res => {\n      this.departmentList = res.data;\n    });\n    this.$request.get('/department/selectTree').then(res => {\n      this.departmentTree = res.data;\n    });\n  },\n  methods: {\n    handleNodeClick(node) {\n      this.form.departmentId = node.id;\n      this.$refs.selectTree.blur();\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/staff/update' : '/staff/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/staff/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/staff/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/staff/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","username","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","departmentList","departmentTree","treeProps","children","label","created","load","$request","get","then","res","methods","handleNodeClick","node","departmentId","id","$refs","selectTree","blur","handleAdd","handleEdit","row","stringify","save","formRef","validate","valid","url","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/Staff.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入关键字查询\" style=\"width: 200px\" v-model=\"username\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\n        <el-table-column label=\"头像\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"role\" label=\"角色标识\"></el-table-column>\n        <el-table-column prop=\"sex\" label=\"性别\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n        <el-table-column prop=\"birth\" label=\"出生年月\"></el-table-column>\n        <el-table-column prop=\"departmentName\" label=\"所属部门\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"管理员\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" placeholder=\"密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"头像\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <el-button type=\"primary\">上传头像</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"sex\">\n          <el-radio-group v-model=\"form.sex\">\n            <el-radio label=\"男\"></el-radio>\n            <el-radio label=\"女\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"出生年月\" prop=\"birth\">\n          <el-date-picker format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\n                          v-model=\"form.birth\" style=\"width: 100%\"></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"所属部门\" prop=\"departmentId\">\n          <el-select class=\"main-select-tree\"\n                     ref=\"selectTree\"\n                     v-model=\"form.departmentId\"\n                     style=\"width: 100%;\">\n            <el-option\n                v-for=\"item in departmentList\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n                :key=\"item\"\n                style=\"display: none;\"/>\n\n            <el-tree\n                :data=\"departmentTree\"\n                :props=\"{children: 'children', label: 'name'}\"\n                highlight-current\n                @node-click=\"handleNodeClick\"\n                default-expand-all />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Staff\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: [],\n      departmentList: [],\n      departmentTree: [],\n      treeProps: {children: 'children', label: 'name'},\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/department/selectAll').then(res => {\n      this.departmentList = res.data\n    })\n    this.$request.get('/department/selectTree').then(res => {\n      this.departmentTree = res.data\n    })\n  },\n  methods: {\n    handleNodeClick(node) {\n      this.form.departmentId = node.id\n      this.$refs.selectTree.blur()\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/staff/update' : '/staff/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/staff/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/staff/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/staff/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.username = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}