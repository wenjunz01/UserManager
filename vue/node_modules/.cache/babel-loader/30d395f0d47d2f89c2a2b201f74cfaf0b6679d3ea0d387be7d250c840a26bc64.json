{"ast":null,"code":"export default {\n  name: \"Department\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      departmentList: [],\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: []\n    };\n  },\n  created() {\n    this.load();\n    // 先查出扁平的部门数组\n    this.$request.get('/department/selectAll').then(res => {\n      this.departmentList = res.data;\n    });\n  },\n  methods: {\n    // node 就是department对象\n    handleNodeClick(node) {\n      this.form.departmentId = node.id;\n      this.$refs.selectTree.blur();\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/department/update' : '/department/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load();\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/department/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load() {\n      // 分页查询\n      this.$request.get('/department/selectTree', {\n        params: {\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load();\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","departmentList","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","created","load","$request","get","then","res","methods","handleNodeClick","node","departmentId","id","$refs","selectTree","blur","handleAdd","handleEdit","row","stringify","save","formRef","validate","valid","url","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","params","reset"],"sources":["src/views/manager/Department.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入关键字查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table row-key=\"id\" default-expand-all :data=\"tableData\" strip>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"name\" label=\"部门名称\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"部门地址\"></el-table-column>\n        <el-table-column prop=\"pid\" label=\"父级ID\"></el-table-column>\n        <el-table-column prop=\"level\" label=\"层级\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <el-dialog title=\"部门表\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"部门名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"部门地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" placeholder=\"部门地址\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级\" prop=\"pid\">\n          <el-select ref=\"selectTree\" v-model=\"form.pid\"  style=\"width: 100%;\">\n            <el-option\n                v-for=\"item in departmentList\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n                :key=\"item\"\n                style=\"display: none;\"/>\n            <el-tree\n                :data=\"tableData\"\n                :props=\"{children: 'children', label: 'name'}\"\n                highlight-current\n                @node-click=\"handleNodeClick\"\n                default-expand-all />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"层级\" prop=\"level\">\n          <el-input v-model=\"form.level\" placeholder=\"层级\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Department\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      departmentList: [],\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: []\n    }\n  },\n  created() {\n    this.load()\n    // 先查出扁平的部门数组\n    this.$request.get('/department/selectAll').then(res => {\n      this.departmentList = res.data\n    })\n  },\n  methods: {\n    // node 就是department对象\n    handleNodeClick(node) {\n      this.form.departmentId = node.id\n      this.$refs.selectTree.blur()\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/department/update' : '/department/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load()\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/department/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load()\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load() {  // 分页查询\n      this.$request.get('/department/selectTree', {\n        params: {\n          name: this.name,\n        }\n      }).then(res => {\n        this.tableData = res.data\n      })\n    },\n    reset() {\n      this.name = null\n      this.load()\n    },\n  }\n}\n</script>\n\n<style scoped>\n .el-table__indent {\n  padding-left: 16px !important;\n}\n</style>"],"mappings":"AAkEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,cAAA;MACAH,IAAA;MACAI,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA,GACA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA;IACA,KAAAC,QAAA,CAAAC,GAAA,0BAAAC,IAAA,CAAAC,GAAA;MACA,KAAAf,cAAA,GAAAe,GAAA,CAAAjB,IAAA;IACA;EACA;EACAkB,OAAA;IACA;IACAC,gBAAAC,IAAA;MACA,KAAAhB,IAAA,CAAAiB,YAAA,GAAAD,IAAA,CAAAE,EAAA;MACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,IAAA;IACA;IACAC,UAAA;MAAA;MACA,KAAAtB,IAAA;MACA,KAAAD,WAAA;IACA;;IACAwB,WAAAC,GAAA;MAAA;MACA,KAAAxB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAuB,SAAA,CAAAD,GAAA;MACA,KAAAzB,WAAA;IACA;;IACA2B,KAAA;MAAA;MACA,KAAAP,KAAA,CAAAQ,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAnB,QAAA;YACAoB,GAAA,OAAA9B,IAAA,CAAAkB,EAAA;YACAa,MAAA,OAAA/B,IAAA,CAAAkB,EAAA;YACAtB,IAAA,OAAAI;UACA,GAAAY,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAmB,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAzB,IAAA;cACA,KAAAV,WAAA;YACA;cACA,KAAAkC,QAAA,CAAAE,KAAA,CAAAtB,GAAA,CAAAuB,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAC,IAAAnB,EAAA;MAAA;MACA,KAAAoB,QAAA;QAAAC,IAAA;MAAA,GAAA3B,IAAA,CAAA4B,QAAA;QACA,KAAA9B,QAAA,CAAA+B,MAAA,yBAAAvB,EAAA,EAAAN,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAmB,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAzB,IAAA;UACA;YACA,KAAAwB,QAAA,CAAAE,KAAA,CAAAtB,GAAA,CAAAuB,GAAA;UACA;QACA;MACA,GAAAM,KAAA,QACA;IACA;IACAjC,KAAA;MAAA;MACA,KAAAC,QAAA,CAAAC,GAAA;QACAgC,MAAA;UACAhD,IAAA,OAAAA;QACA;MACA,GAAAiB,IAAA,CAAAC,GAAA;QACA,KAAAhB,SAAA,GAAAgB,GAAA,CAAAjB,IAAA;MACA;IACA;IACAgD,MAAA;MACA,KAAAjD,IAAA;MACA,KAAAc,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}