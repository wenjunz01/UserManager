{"ast":null,"code":"export default {\n  name: \"Sale\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      customerList: [],\n      goodsList: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      customerName: null,\n      goodsName: null,\n      fromVisible: false,\n      fromVisible1: false,\n      form: {},\n      form1: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        customerId: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        goodsId: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        payType: [{\n          required: true,\n          message: '请输入必填项'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/customer/selectAll').then(res => {\n      this.customerList = res.data;\n    });\n    this.$request.get('/goods/selectAll').then(res => {\n      this.goodsList = res.data;\n    });\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/sale/update' : '/sale/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/sale/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/sale/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/sale/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          customerName: this.customerName,\n          goodsName: this.goodsName\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.customerName = null;\n      this.goodsName = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","customerList","goodsList","pageNum","pageSize","total","customerName","goodsName","fromVisible","fromVisible1","form","form1","user","JSON","parse","localStorage","getItem","rules","customerId","required","message","goodsId","payType","ids","created","load","$request","get","then","res","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Sale.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入用户名称查询\" style=\"width: 200px\" v-model=\"customerName\"></el-input>\n      <el-input placeholder=\"请输入产品名称查询\" style=\"width: 200px; margin-left: 10px\" v-model=\"goodsName\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px; \" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增订单信息</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"customerName\" label=\"用户名称\"></el-table-column>\n        <el-table-column prop=\"goodsName\" label=\"产品\"></el-table-column>\n        <el-table-column prop=\"payType\" label=\"付款行\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"创建时间\" width=\"140\"></el-table-column>\n        <el-table-column prop=\"user\" label=\"操作人\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"单价\"></el-table-column>\n        <el-table-column prop=\"num\" label=\"订单数量\"></el-table-column>\n        <el-table-column prop=\"unit\" label=\"产品规格\"></el-table-column>\n        <el-table-column prop=\"total\" label=\"订单总价\"></el-table-column>\n        <el-table-column prop=\"comment\" label=\"备注\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"220\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"订单\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\" :inline=\"true\" class=\"custom-form\">\n        <div class=\"form-row\">\n          <el-form-item label=\"用户\" prop=\"customerId\">\n            <el-select v-model=\"form.customerId\">\n              <el-option v-for=\"item in customerList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"产品\" prop=\"goodsId\">\n            <el-select v-model=\"form.goodsId\">\n              <el-option v-for=\"item in goodsList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"付款行\" prop=\"payType\">\n            <el-select v-model=\"form.payType\">\n              <el-option v-for=\"item in ['中国建设银行', '中国工商银行', '中国银行','中国光大银行','其他付款方式']\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\n            </el-select>\n          </el-form-item>\n        </div>\n        <div class=\"form-row\">\n          <el-form-item label=\"创建时间\" prop=\"time\">\n            <el-date-picker type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\" v-model=\"form.time\"></el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"单价\" prop=\"price\">\n            <el-input v-model=\"form.price\" placeholder=\"单价\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"订单数量\" prop=\"num\">\n            <el-input-number :min=\"1\" v-model=\"form.num\" placeholder=\"订单数量\"></el-input-number>\n          </el-form-item>\n        </div>\n        <div class=\"form-row\">\n          <el-form-item label=\"产品规格\" prop=\"unit\">\n            <el-input v-model=\"form.unit\" placeholder=\"产品规格\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"备注\" prop=\"comment\">\n            <el-input type=\"textarea\" v-model=\"form.comment\" placeholder=\"备注\"></el-input>\n          </el-form-item>\n        </div>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Sale\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      customerList: [],\n      goodsList: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      customerName: null,\n      goodsName: null,\n      fromVisible: false,\n      fromVisible1: false,\n      form: {},\n      form1: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        customerId: [\n          { required: true, message: '请输入必填项' }\n        ],\n        goodsId: [\n          { required: true, message: '请输入必填项' }\n        ],\n        payType: [\n          { required: true, message: '请输入必填项' }\n        ],\n      },\n      ids: []\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/customer/selectAll').then(res => {\n      this.customerList = res.data\n    })\n\n    this.$request.get('/goods/selectAll').then(res => {\n      this.goodsList = res.data\n    })\n  },\n  methods: {\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/sale/update' : '/sale/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/sale/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/sale/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/sale/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          customerName: this.customerName,\n          goodsName: this.goodsName,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.customerName = null\n      this.goodsName = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n.form-row {\n  display: flex;\n  align-items: center;\n}\n\n.form-row .el-form-item {\n  flex: 1;\n  margin-right: 20px;\n  text-align: left;\n}\n\n.form-row .el-form-item:last-child {\n  margin-right: 0;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}