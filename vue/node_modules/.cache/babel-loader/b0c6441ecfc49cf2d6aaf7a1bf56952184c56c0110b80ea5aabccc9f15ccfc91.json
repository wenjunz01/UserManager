{"ast":null,"code":"export default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      customerName: null,\n      contractName: null,\n      productNo: null,\n      approveNo: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      customers: [],\n      contracts: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        price: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        customerName: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        // contractTitle: [\n        //   { required: true, message: '请输入必填项' }\n        // ],\n        productNo: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        approveNo: [{\n          required: true,\n          message: '请输入必填项'\n        }]\n      }\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/customer/selectAll').then(res => {\n      this.customers = res.data;\n    });\n    this.$request.get('/contract/selectAll').then(res => {\n      this.contracts = res.data;\n    });\n  },\n  methods: {\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/goods/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          customerName: this.customerName,\n          productNo: this.productNo,\n          approveNo: this.approveNo\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.customerName = null;\n      this.productNo = null;\n      this.approveNo = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","customerName","contractName","productNo","approveNo","fromVisible","form","user","JSON","parse","localStorage","getItem","ids","customers","contracts","rules","required","message","price","created","load","$request","get","then","res","methods","handleFileSuccess","response","file","fileList","img","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","code","$message","success","error","msg","del","$confirm","type","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Goods.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入产品名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n      <el-input placeholder=\"请输入用户名称查询\" style=\"width: 200px; margin-left: 10px\" v-model=\"customerName\"></el-input>\n      <!-- <el-input placeholder=\"请输入生产批号查询\" style=\"width: 200px; margin-left: 10px\" v-model=\"productNo\"></el-input>\n      <el-input placeholder=\"请输入批准文号查询\" style=\"width: 200px; margin-left: 10px\" v-model=\"approveNo\"></el-input> -->\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增产品信息</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"name\" label=\"产品名称\"></el-table-column>\n        <el-table-column prop=\"customerName\" label=\"用户名称\"></el-table-column>\n        <el-table-column prop=\"contractTitle\" label=\"关联合同名称\"> </el-table-column>\n        <el-table-column prop=\"producer\" label=\"产地\"></el-table-column>\n        <el-table-column prop=\"descr\" label=\"产品详情\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"销售价格/元\"></el-table-column>\n        <el-table-column prop=\"num\" label=\"产品数量\"></el-table-column>\n        <el-table-column prop=\"img\" label=\"产品图片\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.img\"\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"unit\" label=\"规格型号\"></el-table-column>\n        <el-table-column prop=\"pack\" label=\"包装单位\"></el-table-column>\n        <el-table-column prop=\"productNo\" label=\"生产批号\"></el-table-column>\n        <el-table-column prop=\"approveNo\" label=\"批准文号\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"success\" v-if=\"scope.row.status === '可用'\">可用</el-tag>\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '不可用'\">不可用</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"产品表\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"产品名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"产品名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户名称\" prop=\"customerName\">\n          <el-select style=\"width: 100%\" v-model=\"form.customerId\">\n            <el-option v-for=\"item in customers\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"所关联合同\" prop=\"contractTitle\">\n          <el-select style=\"width: 100%\" v-model=\"form.contractId\">\n            <el-option v-for=\"item in contracts\" :key=\"item.id\" :value=\"item.id\" :label=\"item.title\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"产品产地\" prop=\"producer\">\n          <el-input v-model=\"form.producer\" placeholder=\"产品产地\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"产品描述\" prop=\"descr\">\n          <el-input v-model=\"form.descr\" placeholder=\"产品描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"销售价格\" prop=\"price\">\n          <el-input v-model=\"form.price\" placeholder=\"销售价格\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"产品数量\" prop=\"num\">\n          <el-input v-model=\"form.num\" placeholder=\"产品数量\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"产品图片\" prop=\"img\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              :on-success=\"handleFileSuccess\"\n          >\n            <el-button type=\"primary\">上传</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"产品规格\" prop=\"unit\">\n          <el-input v-model=\"form.unit\" placeholder=\"产品规格\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"包装单位\" prop=\"pack\">\n          <el-input v-model=\"form.pack\" placeholder=\"包装单位\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"生产批号\" prop=\"productNo\">\n          <el-input v-model=\"form.productNo\" placeholder=\"生产批号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"批准文号\" prop=\"approveNo\">\n          <el-input v-model=\"form.approveNo\" placeholder=\"批准文号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select style=\"width: 100%\" v-model=\"form.status\">\n            <el-option v-for=\"item in ['可用', '不可用']\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Goods\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      name: null,\n      customerName: null,\n      contractName: null,\n      productNo: null,\n      approveNo: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      customers: [],\n      contracts:[],\n      rules: {\n        name: [\n          { required: true, message: '请输入必填项' }\n        ],\n        price: [\n          { required: true, message: '请输入必填项' }\n        ],\n        customerName: [\n          { required: true, message: '请输入必填项' }\n        ],\n        // contractTitle: [\n        //   { required: true, message: '请输入必填项' }\n        // ],\n        productNo: [\n          { required: true, message: '请输入必填项' }\n        ],\n        approveNo: [\n          { required: true, message: '请输入必填项' }\n        ],\n      },\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/customer/selectAll')\n    .then(res => {\n      this.customers = res.data\n    });\n    this.$request.get('/contract/selectAll')\n        .then(res => {\n            this.contracts = res.data\n        });\n  },\n  methods: {\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/goods/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/goods/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          customerName: this.customerName,\n          productNo: this.productNo,\n          approveNo: this.approveNo,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.customerName = null\n      this.productNo = null\n      this.approveNo = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}