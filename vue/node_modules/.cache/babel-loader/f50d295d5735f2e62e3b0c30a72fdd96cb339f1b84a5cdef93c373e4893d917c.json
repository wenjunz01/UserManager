{"ast":null,"code":"export default {\n  name: \"Plan\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      content: null,\n      buttonDisabled: false,\n      publiccustomerName: null,\n      fromVisible: false,\n      form: {},\n      executor: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      publiccustomers: [],\n      rules: {\n        content: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        publiccustomerName: [{\n          required: true,\n          message: '请输入必填项'\n        }],\n        time: [{\n          required: true,\n          message: '请输入必填项'\n        }]\n      }\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/publiccustomer/selectAll').then(res => {\n      this.publiccustomers = res.data;\n    });\n  },\n  methods: {\n    disableButton() {\n      this.buttonDisabled = true;\n    },\n    handleFileSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/plan/update' : '/plan/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/plan/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/plan/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/plan/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          content: this.content\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.content = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","content","buttonDisabled","publiccustomerName","fromVisible","form","executor","JSON","parse","localStorage","getItem","ids","publiccustomers","rules","required","message","time","created","load","$request","get","then","res","methods","disableButton","handleFileSuccess","response","file","fileList","img","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","code","$message","success","error","msg","del","$confirm","type","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Plan.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"search\">\r\n        <el-input placeholder=\"请输入计划内容查询\" style=\"width: 200px\" v-model=\"content\"></el-input>\r\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n  \r\n      <div class=\"operation\">\r\n        <el-button type=\"primary\" plain @click=\"handleAdd\">新增跟进计划</el-button>\r\n        <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n      </div>\r\n  \r\n      <div class=\"table\">\r\n        <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n          <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n          <el-table-column prop=\"content\" label=\"跟进内容\"></el-table-column>\r\n          <el-table-column prop=\"publiccustomerName\" label=\"跟进用户\"></el-table-column>\r\n          <el-table-column prop=\"time\" label=\"跟进时间\"></el-table-column>\r\n          <el-table-column prop=\"executor\" label=\"执行人\"></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"状态\">\r\n            <template v-slot=\"scope\">\r\n              <el-tag type=\"primary\" v-if=\"scope.row.status === '待完成'\">待完成</el-tag>\r\n              <el-tag type=\"success\" v-if=\"scope.row.status === '已完成'\">已完成</el-tag>\r\n              <el-tag type=\"warning\" v-if=\"scope.row.status === '延期'\">延期</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n            <template v-slot=\"scope\">\r\n              <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\" :disabled=\"scope.row.status === '已完成'\">编辑</el-button>\r\n              <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n              background\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pageNum\"\r\n              :page-sizes=\"[5, 10, 20]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, prev, pager, next\"\r\n              :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n  \r\n      <el-dialog title=\"计划表\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n          <el-form-item label=\"跟进内容\" prop=\"content\">\r\n            <el-input v-model=\"form.content\" placeholder=\"跟进内容\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"跟进用户\" prop=\"publiccustomerName\">\r\n            <el-select style=\"width: 100%\" v-model=\"form.publiccustomerId\">\r\n              <el-option v-for=\"item in publiccustomers\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"计划时间\" prop=\"time\">\r\n            <el-date-picker type=\"datetime\" format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n            v-model=\"form.time\" style=\"width: 100%\"></el-date-picker>\r\n          </el-form-item>\r\n          <el-form-item label=\"状态\" prop=\"status\">\r\n            <el-select style=\"width: 100%\" v-model=\"form.status\">\r\n              <el-option v-for=\"item in ['待完成', '已完成','延期']\" :key=\"item\" :value=\"item\" :label=\"item\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n  \r\n  \r\n    </div>\r\n  </template>\r\n  <script>\r\n  export default {\r\n    name: \"Plan\",\r\n    data() {\r\n      return {\r\n        tableData: [],  // 所有的数据\r\n        pageNum: 1,   // 当前的页码\r\n        pageSize: 10,  // 每页显示的个数\r\n        total: 0,\r\n        content: null,\r\n        buttonDisabled: false,\r\n        publiccustomerName: null,\r\n        fromVisible: false,\r\n        form: {},\r\n        executor: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        ids: [],\r\n        publiccustomers: [],\r\n        rules: {\r\n        content: [\r\n          { required: true, message: '请输入必填项' }\r\n        ],\r\n        publiccustomerName: [\r\n          { required: true, message: '请输入必填项' }\r\n        ],\r\n        time: [\r\n          { required: true, message: '请输入必填项' }\r\n        ],\r\n      },\r\n      }\r\n    },\r\n    created() {\r\n      this.load(1)\r\n  \r\n      this.$request.get('/publiccustomer/selectAll')\r\n      .then(res => {\r\n        this.publiccustomers = res.data\r\n      });\r\n    },\r\n    methods: {\r\n        disableButton() {\r\n      this.buttonDisabled = true;\r\n    },\r\n      handleFileSuccess(response, file, fileList) {\r\n        this.form.img = response.data\r\n      },\r\n      handleAdd() {   // 新增数据\r\n        this.form = {}  // 新增数据的时候清空数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      handleEdit(row) {   // 编辑数据\r\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n        this.fromVisible = true   // 打开弹窗\r\n      },\r\n      save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n        this.$refs.formRef.validate((valid) => {\r\n          if (valid) {\r\n            this.$request({\r\n              url: this.form.id ? '/plan/update' : '/plan/add',\r\n              method: this.form.id ? 'PUT' : 'POST',\r\n              data: this.form\r\n            }).then(res => {\r\n              if (res.code === '200') {  // 表示成功保存\r\n                this.$message.success('保存成功')\r\n                this.load(1)\r\n                this.fromVisible = false\r\n              } else {\r\n                this.$message.error(res.msg)  // 弹出错误的信息\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },\r\n      del(id) {   // 单个删除\r\n        this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/plan/delete/' + id).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n        this.ids = rows.map(v => v.id)\r\n      },\r\n      delBatch() {   // 批量删除\r\n        if (!this.ids.length) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n          this.$request.delete('/plan/delete/batch', {data: this.ids}).then(res => {\r\n            if (res.code === '200') {   // 表示操作成功\r\n              this.$message.success('操作成功')\r\n              this.load(1)\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }).catch(() => {\r\n        })\r\n      },\r\n      load(pageNum) {  // 分页查询\r\n        if (pageNum) this.pageNum = pageNum\r\n        this.$request.get('/plan/selectPage', {\r\n          params: {\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n            name: this.name,\r\n            content: this.content,\r\n          }\r\n        }).then(res => {\r\n          this.tableData = res.data?.list\r\n          this.total = res.data?.total\r\n        })\r\n      },\r\n      reset() {\r\n        this.content = null\r\n        this.load(1)\r\n      },\r\n      handleCurrentChange(pageNum) {\r\n        this.load(pageNum)\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}